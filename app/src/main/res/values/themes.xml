<?xml version="1.0" encoding="utf-8"?>
<resources>

    <!--theme attributes, see https://www.youtube.com/watch?v=Owkf8DhAOSo-->
    <!--top-level theme-->
    <style name="Theme.Golden.Template.DayNight" parent="Base.V24.Theme.Golden.Template" />

    <!--light mode theme-->
    <style name="Base.V24.Theme.Golden.Template" parent="Theme.MaterialComponents.DayNight.NoActionBar">

        <!--System/Platform attributes-->
        <item name="android:windowLightStatusBar">true</item>

        <!--<item name="android:windowBackground">?android:colorBackground</item>-->
        <item name="android:statusBarColor">@color/so_transparent</item>
        <item name="android:navigationBarColor">@color/so_dark</item>

        <!--In general our UI do not support touch at the same time and thus we should not-->
        <!--allow this from happening to prevent many unforeseeable issues-->
        <item name="android:splitMotionEvents">false</item>
        <item name="android:windowEnableSplitTouch">false</item>

        <!--Material color attributes (base spectra theme) -->
        <!--colorPrimary colors map to components and elements, such as app bars and buttons. -->
        <!--colorSecondary colors are most often used as accents on components, such as FABs and -->
        <!--selection controls.-->
        <item name="colorPrimary">@color/theme_yellow_500</item>
        <item name="colorPrimaryVariant">@color/theme_yellow_800</item>
        <item name="colorOnPrimary">@color/so_white</item>

        <item name="colorSecondary">@color/theme_purple_500</item>
        <item name="colorSecondaryVariant">@color/theme_purple_800</item>
        <item name="colorOnSecondary">@color/so_white</item>

        <item name="colorError">@color/generic_red</item>
        <item name="colorOnError">@color/so_white</item>

        <item name="colorApproval">@color/generic_green</item>
        <item name="colorOnApproval">@color/so_white</item>

        <item name="colorNeutral">@color/so_dark</item>
        <item name="colorOnNeutral">@color/so_white</item>

        <!--colorBackground appears behind scrollable content and is used for the default window-->
        <!--background. colorSurface is mapped to the surface of components such as cards, sheets-->
        <!--and menus. colorError is used to indicate an csl_error state for components such as-->
        <!--text fields.-->
        <item name="android:colorBackground">@color/so_white_variant</item>
        <item name="colorOnBackground">@color/so_dark</item>

        <item name="colorSurface">@color/so_white</item>
        <item name="colorOnSurface">@color/so_dark</item>

        <!--Faded colors for ripple, disabled color-->
        <!--<item name="colorPrimaryFaded">@color/lc533_living_coral</item>-->
        <!--<item name="colorSecondaryFaded">@color/b533_neon_blue</item>-->
        <!--<item name="colorSurfaceFaded">@color/n033_white_disabled</item>-->
        <!--<item name="colorOnSurfaceFaded">@color/n933_dark_grey_disabled</item>-->

        <!--text colors-->
        <item name="android:textColor">@color/neutral_emphasis_high</item>
        <item name="android:textColorPrimary">@color/neutral_emphasis_high</item>
        <item name="android:textColorSecondary">@color/neutral_emphasis_medium</item>

        <!--Set ripple color-->
        <!--<item name="colorControlHighlight">?colorOnSurfaceFaded</item>-->

        <!--Material type attributes-->
        <item name="textAppearanceHeadline1">@style/TextAppearance.Golden.Template.Headline1</item>
        <item name="textAppearanceHeadline2">@style/TextAppearance.Golden.Template.Headline2</item>
        <item name="textAppearanceHeadline3">@style/TextAppearance.Golden.Template.Headline3</item>
        <item name="textAppearanceHeadline4">@style/TextAppearance.Golden.Template.Headline4</item>
        <item name="textAppearanceHeadline5">@style/TextAppearance.Golden.Template.Headline5</item>
        <item name="textAppearanceHeadline6">@style/TextAppearance.Golden.Template.Headline6</item>
        <item name="textAppearanceSubtitle1">@style/TextAppearance.Golden.Template.Subtitle1</item>
        <item name="textAppearanceSubtitle2">@style/TextAppearance.Golden.Template.Subtitle2</item>
        <item name="textAppearanceBody1">@style/TextAppearance.Golden.Template.Body1</item>
        <item name="textAppearanceBody2">@style/TextAppearance.Golden.Template.Body2</item>
        <item name="textAppearanceCaption">@style/TextAppearance.Golden.Template.Caption</item>
        <item name="textAppearanceTerms">@style/TextAppearance.Golden.Template.Terms</item>
        <item name="textAppearanceButton">@style/TextAppearance.Golden.Template.Button</item>
        <item name="textAppearanceOverline">@style/TextAppearance.Golden.Template.Overline</item>
        <item name="textAppearanceTextButton">@style/TextAppearance.Golden.Template.TextButton</item>
        <item name="android:includeFontPadding">false</item>

        <!--Material shape attributes-->
        <item name="shapeAppearanceSmallComponent">@style/ShapeAppearance.Golden.Template.Small.Rounded</item>
        <item name="shapeAppearanceMediumComponent">@style/ShapeAppearance.Golden.Template.Medium</item>
        <item name="shapeAppearanceLargeComponent">@style/ShapeAppearance.Golden.Template.Medium</item>

        <!--Color alpha-->
        <item name="alphaEmphasisHigh">0.92</item>
        <item name="alphaEmphasisMedium">0.64</item>
        <item name="alphaEmphasisLow">0.24</item>
        <item name="alphaEmphasisDisabled">0.12</item>

        <!--Override the actual material component/ view class-->

        <!--Bottom sheet-->
        <!--<item name="bottomSheetDialogTheme">@style/ThemeOverlay.Golden.Template.BottomSheetDialog</item>-->

        <!--Toolbar style, top app bar-->
        <item name="appBarLayoutStyle">@style/Widget.Golden.Template.AppBarLayout</item>
        <item name="toolbarStyle">@style/Widget.Golden.Template.Toolbar</item>
        <item name="actionBarTheme">@style/Widget.Golden.Template.Toolbar</item>
        <item name="actionOverflowButtonStyle">@style/Widget.Golden.Template.ActionButton.Overflow</item>
        <item name="toolbarNavigationButtonStyle">@style/Widget.Golden.Template.Toolbar.Button.Navigation</item>

        <item name="tooltipStyle">@style/Widget.Golden.Template.Tooltip</item>

        <!--Bottom navigation-->
        <item name="bottomNavigationStyle">@style/Widget.Golden.Template.BottomNavigationView</item>

        <!--Tab layout-->
        <item name="tabStyle">@style/Widget.Golden.Template.TabLayout</item>

        <!--Button style-->
        <item name="materialButtonStyle">@style/Widget.Golden.Template.Button.Flat</item>
        <item name="materialButtonOutlinedStyle">@style/Widget.Golden.Template.Button.Outlined</item>
        <item name="borderlessButtonStyle">@style/Widget.Golden.Template.Button.TextButton</item>

        <!--FAB style-->
        <item name="floatingActionButtonStyle">@style/Widget.Golden.Template.FloatingActionButton</item>
        <item name="extendedFloatingActionButtonStyle">@style/Widget.Golden.Template.ExtendedFloatingActionButton</item>

        <!--Snackbar style-->
        <item name="snackbarStyle">@style/Widget.Golden.Template.Snackbar</item>
        <item name="snackbarButtonStyle">@style/Widget.Golden.Template.SnackbarButton</item>

        <!--Control style-->
        <item name="checkboxStyle">@style/Widget.Golden.Template.Checkbox</item>
        <item name="radioButtonStyle">@style/Widget.Golden.Template.RadioButton</item>
        <item name="switchStyle">@style/Widget.Golden.Template.Switch</item>

        <!--Text input style-->
        <!--<item name="textInputStyle">@style/Widget.Golden.Template.TextInputLayout</item>-->
        <!--<item name="editTextStyle">@style/Widget.Golden.Template.TextInputEditText</item>-->
        <!--<item name="android:editTextStyle">@style/Widget.Golden.Template.EditText</item>-->

        <!--Card style-->
        <!--<item name="materialCardViewStyle">@style/Widget.Golden.Template.Card</item>-->

        <!--Dialog style-->
        <item name="alertDialogTheme">@style/ThemeOverlay.Golden.Template.MaterialAlertDialog</item>
        <item name="materialAlertDialogTheme">@style/ThemeOverlay.Golden.Template.MaterialAlertDialog</item>

        <!--Navigation drawer, but we don't use that much-->
        <!--<item name="navigationViewStyle">@style/Widget.Golden.Template.NavigationView</item>-->
    </style>

    <!--Theme overlay-->
    <!--the overlay on override the defined attributes-->

    <!--for dialog, it has no inheritance from the app theme-->
    <!--so we need to setup the themeoverlay, and set it in the material theme-->
    <!--Dialog style overlay-->
    <style name="ThemeOverlay.Golden.Template.MaterialAlertDialog" parent="ThemeOverlay.MaterialComponents.MaterialAlertDialog">
        <item name="windowNoTitle">true</item>
        <item name="materialAlertDialogTitleTextStyle">@style/Widget.Golden.Template.DialogTitle</item>
        <item name="materialAlertDialogBodyTextStyle">?textAppearanceBody1</item>
        <item name="buttonBarPositiveButtonStyle">@style/Widget.Golden.Template.DialogButton</item>
        <item name="buttonBarNegativeButtonStyle">@style/Widget.Golden.Template.DialogButton</item>
        <item name="buttonBarNeutralButtonStyle">@style/Widget.Golden.Template.DialogButton</item>
        <item name="android:textColor">@color/neutral_emphasis_medium</item>
        <!--<item name="android:minWidth">312dp</item>-->
    </style>

    <style name="Widget.Golden.Template.DialogTitle" parent="TextAppearance.Golden.Template.Headline5">
        <item name="android:layout_width">wrap_content</item>
        <item name="android:layout_height">wrap_content</item>
        <item name="android:textColor">@color/neutral_emphasis_high</item>
    </style>

    <style name="Widget.Golden.Template.DialogButton" parent="Widget.Golden.Template.Button.TextButton">
        <item name="android:minHeight">@dimen/min_touch_area_dense</item>
        <item name="android:letterSpacing">0.02</item>
        <item name="android:insetTop">4dp</item>
        <item name="android:insetBottom">4dp</item>
        <item name="android:insetLeft">4dp</item>
        <item name="android:insetRight">4dp</item>
    </style>

    <!--For full screen dialog (like config update or printing), need to set this theme in the manifests-->
    <style name="Theme.Golden.Template.DialogActivity" parent="Theme.MaterialComponents.DayNight.Dialog">
        <item name="windowNoTitle">true</item>
        <item name="android:theme">@style/Theme.Golden.Template.DayNight</item>
        <item name="buttonBarPositiveButtonStyle">@style/Widget.Golden.Template.DialogButton</item>
        <item name="buttonBarNegativeButtonStyle">@style/Widget.Golden.Template.DialogButton</item>
        <item name="buttonBarNeutralButtonStyle">@style/Widget.Golden.Template.DialogButton</item>
    </style>

    <!--For DialogFragment, unused now-->
    <!--    <style name="Theme.Golden.Template.ProgressDialog" parent="Theme.Golden.Template.DayNight">-->
    <!--        <item name="android:windowNoTitle">true</item>-->
    <!--        <item name="android:windowActionBar">false</item>-->
    <!--        <item name="android:windowFullscreen">true</item>-->
    <!--        <item name="android:windowIsFloating">false</item>-->
    <!--    </style>-->

</resources>
